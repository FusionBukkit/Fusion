From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: IPECTER <ipectert@gmail.com>
Date: Mon, 2 Jan 2023 04:30:45 +0900
Subject: [PATCH] NoChatReports-Implementation

No Chat Reports - Aizistral Studios - WTFPL
Prismarine - PrismarineTeam - MIT
Mirai - etil2jz - GPL 3.0

diff --git a/src/main/java/com/github/ipecter/fusion/FusionConfig.java b/src/main/java/com/github/ipecter/fusion/FusionConfig.java
index 7d09004e666aaabc70edc04c4f9f442601fc9207..4b83507afdccf4850bc282290b7927ba232a690b 100644
--- a/src/main/java/com/github/ipecter/fusion/FusionConfig.java
+++ b/src/main/java/com/github/ipecter/fusion/FusionConfig.java
@@ -205,10 +205,14 @@ public class FusionConfig {
     }
 
     public static boolean noChatReportsEnable = true;
+    public static boolean noChatReportsConvertToGameMessage = true;
+    public static boolean noChatReportsAddQueryData = true;
 
     private static void noChatReportsConfig() {
         setComment("no-chat-reports", "[ No Chat Reports ] Player Chat Reporting Control Mod");
         noChatReportsEnable = getBoolean("no-chat-reports.enable", noChatReportsEnable);
+        noChatReportsConvertToGameMessage = getBoolean("no-chat-reports.convert-to-game-message", noChatReportsConvertToGameMessage) && noChatReportsEnable;
+        noChatReportsAddQueryData = getBoolean("no-chat-reports.add-query-data", noChatReportsAddQueryData) && noChatReportsEnable;
     }
 
     private static void noChatReportsConfigSetup() {
diff --git a/src/main/java/net/minecraft/network/protocol/status/ServerStatus.java b/src/main/java/net/minecraft/network/protocol/status/ServerStatus.java
index 6e0a3086da142f1c42007a16bbec7edbab17da04..46409ef273bc8d2c2b20ed76b4cd91b6d2446d66 100644
--- a/src/main/java/net/minecraft/network/protocol/status/ServerStatus.java
+++ b/src/main/java/net/minecraft/network/protocol/status/ServerStatus.java
@@ -28,6 +28,14 @@ public class ServerStatus {
     private String favicon;
     private boolean enforcesSecureChat;
 
+    // Fusion start - NoChatReports
+    /**
+     * Special additional variable that allows the client to know whether server prevents chat reports
+     * upon pinging it.
+     */
+    private boolean preventsChatReports;
+    // Fusion end
+
     @Nullable
     public Component getDescription() {
         return this.description;
@@ -68,9 +76,29 @@ public class ServerStatus {
         this.enforcesSecureChat = secureChatEnforced;
     }
 
+    // Fusion start - NoChatReports
+    /**
+     * @reason Spoof the value of "enforcesSecureChat" in case conversion to system messages is enabled.
+     * There is no way for client to verify the value of the option in such case, so that's one less
+     * annoying warning.
+     * @author Aizistral
+     */
     public boolean enforcesSecureChat() {
-        return this.enforcesSecureChat;
+        return com.github.ipecter.fusion.FusionConfig.noChatReportsConvertToGameMessage ? true : this.enforcesSecureChat;
+    }
+
+    public boolean preventsChatReports() {
+        if (this.getVersion() != null && this.getVersion().getProtocol() < 759
+                && this.getVersion().getProtocol() > 0)
+            return true;
+
+        return this.preventsChatReports;
+    }
+
+    public void setPreventsChatReports(boolean prevents) {
+        this.preventsChatReports = prevents;
     }
+    // Fusion end
 
     public static class Players {
         private final int maxPlayers;
@@ -173,6 +201,12 @@ public class ServerStatus {
                 serverStatus.setEnforcesSecureChat(GsonHelper.getAsBoolean(jsonObject, "enforcesSecureChat"));
             }
 
+            // Fusion start - NoChatReports
+            if (jsonObject.has("preventsChatReports")) {
+                serverStatus.setPreventsChatReports(GsonHelper.getAsBoolean(jsonObject, "preventsChatReports"));
+            }
+            // Fusiobn end
+
             return serverStatus;
         }
 
@@ -196,6 +230,12 @@ public class ServerStatus {
                 jsonObject.addProperty("favicon", serverStatus.getFavicon());
             }
 
+            // Fusion start - NoChatReports
+            if (com.github.ipecter.fusion.FusionConfig.noChatReportsAddQueryData) {
+                jsonObject.addProperty("preventsChatReports", true);
+            }
+            // Fusion end
+
             return jsonObject;
         }
     }
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 4675524988ea2ef346726677f9767382f1e154ab..1a706fbd5b58049d31d7350a2eb500f92a31c743 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -679,9 +679,15 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         return this.getProperties().networkCompressionThreshold;
     }
 
+    // Fusion start - NoChatReports
+    /**
+     * @reason If mod is installed on server (If NoChatReports is enabled - IPECTER/Fusion) - it does the exact opposite of what this option is
+     * designed to enforce, so there's no reason to have it enabled.
+     * @author Aizistral
+     */
     @Override
     public boolean enforceSecureProfile() {
-        return this.getProperties().enforceSecureProfile && this.getProperties().onlineMode;
+        return com.github.ipecter.fusion.FusionConfig.noChatReportsEnable ? false : this.getProperties().enforceSecureProfile && this.getProperties().onlineMode;
     }
 
     protected boolean convertOldUsers() {
diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index a8e205af936efe0909c94575e3b7f8ca50cead2f..118a1acdd79e21a4337376da3bba6d0b255177ee 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -2229,12 +2229,35 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
         }
     }
 
+    // Fusion start - NoChatReports
+    /**
+     * @reason Convert player message to system message if mod is configured respectively.
+     * This allows to circumvent signature check on client, as it only checks player messages.
+     * @author JFronny (original implementation)
+     * @author Aizistral
+     */
     @Override
     public void send(Packet<?> packet) {
+        if (com.github.ipecter.fusion.FusionConfig.noChatReportsConvertToGameMessage) {
+            if (packet instanceof net.minecraft.network.protocol.game.ClientboundPlayerChatPacket chat) {
+                packet = new net.minecraft.network.protocol.game.ClientboundSystemChatPacket(chat.chatType().resolve(this.player.level.registryAccess()).get().decorate(chat.unsignedContent() != null ? chat.unsignedContent()
+                        : Component.literal(chat.body().content())), false);
+            }
+        }
         this.send(packet, (PacketSendListener) null);
     }
 
+    /**
+     * @reason Ensure conversion works regardless of which send method is used.
+     * @author Aizistral
+     */
     public void send(Packet<?> packet, @Nullable PacketSendListener callbacks) {
+        if (com.github.ipecter.fusion.FusionConfig.noChatReportsConvertToGameMessage) {
+            if (packet instanceof net.minecraft.network.protocol.game.ClientboundPlayerChatPacket chat && callbacks != null) {
+                this.send(chat);
+                return;
+            }
+        }
         // CraftBukkit start
         if (packet == null || this.processedDisconnect) { // Spigot
             return;
@@ -2256,6 +2279,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
             throw new ReportedException(crashreport);
         }
     }
+    // Fusion end
 
     @Override
     public void handleSetCarriedItem(ServerboundSetCarriedItemPacket packet) {
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index b0fa557e756d1e30097ad5a72e679d8844b34cd9..092e39d6b96d2773ca6c7a238d08c07d79ad2581 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -1438,9 +1438,15 @@ public abstract class PlayerList {
 
     }
 
+    // Fusion start - NoChatReports
+    /**
+     * @reason Remove "Not Secure" mark in server chat logs.
+     * @author Aizistral
+     */
     public boolean verifyChatTrusted(PlayerChatMessage message) { // Paper - private -> public
-        return message.hasSignature() && !message.hasExpiredServer(Instant.now());
+        return com.github.ipecter.fusion.FusionConfig.noChatReportsEnable ? true : message.hasSignature() && !message.hasExpiredServer(Instant.now());
     }
+    // Fusion end
 
     // CraftBukkit start
     public ServerStatsCounter getPlayerStats(ServerPlayer entityhuman) {
