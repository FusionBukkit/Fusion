From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: IPECTER <ipectert@gmail.com>
Date: Tue, 25 Oct 2022 22:28:36 +0900
Subject: [PATCH] Lithium-PrecomputeShapeArrays

JettPack - Titaniumtown - GPL 3.0
Lithium - CaffeineMC  - GPL 3.0

diff --git a/src/main/java/com/github/ipecter/fusion/FusionConfig.java b/src/main/java/com/github/ipecter/fusion/FusionConfig.java
index 5742ad4ea8b1e9d8a74309ee25cb29c137236540..5f73dcd5d213d287c3645462d3a24be707999122 100644
--- a/src/main/java/com/github/ipecter/fusion/FusionConfig.java
+++ b/src/main/java/com/github/ipecter/fusion/FusionConfig.java
@@ -202,6 +202,7 @@ public class FusionConfig {
     public static boolean lithiumFastRetrieval = true;
     public static boolean lithiumOptimizedAIGoalSet = true;
     public static boolean lithiumOptimizedStoreGameRule = true;
+    public static boolean lithiumPrecomputeShapeArrays = true;
 
     private static void lithiumConfig() {
         setComment("lithium", "[ Lithium ] General-Purpose Optimization Mod");
@@ -212,5 +213,6 @@ public class FusionConfig {
         lithiumFastRetrieval = getBoolean("lithium.fast-retrieval", lithiumFastRetrieval) && lithiumEnable;
         lithiumOptimizedAIGoalSet = getBoolean("lithium.optimized-ai-goal-set", lithiumOptimizedAIGoalSet) && lithiumEnable;
         lithiumOptimizedStoreGameRule = getBoolean("lithium.optimized-store-gamerule", lithiumOptimizedStoreGameRule) && lithiumEnable;
+        lithiumPrecomputeShapeArrays = getBoolean("lithium.precompute-shape-arrays", lithiumPrecomputeShapeArrays) && lithiumEnable;
     }
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/core/Direction.java b/src/main/java/net/minecraft/core/Direction.java
index 3908708107aea6ecbf07797ea25785b1ed44854b..3af7034a9030b54acf0ae8bd0db2f9875db974ae 100644
--- a/src/main/java/net/minecraft/core/Direction.java
+++ b/src/main/java/net/minecraft/core/Direction.java
@@ -41,7 +41,7 @@ public enum Direction implements StringRepresentable {
     private final Direction.Axis axis;
     private final Direction.AxisDirection axisDirection;
     private final Vec3i normal;
-    private static final Direction[] VALUES = values();
+    public static final Direction[] VALUES = values(); // Fusion - Lithium: Precompute Shape Arrays
     private static final Direction[] BY_3D_DATA = Arrays.stream(VALUES).sorted(Comparator.comparingInt((direction) -> {
         return direction.data3d;
     })).toArray((i) -> {
diff --git a/src/main/java/net/minecraft/world/phys/shapes/CubePointRange.java b/src/main/java/net/minecraft/world/phys/shapes/CubePointRange.java
index a544db042c8d2ecec8d323770552c4f10ca758a6..19a2e0f93953a4ee7cac85d2f960b6e778a9b48a 100644
--- a/src/main/java/net/minecraft/world/phys/shapes/CubePointRange.java
+++ b/src/main/java/net/minecraft/world/phys/shapes/CubePointRange.java
@@ -4,6 +4,7 @@ import it.unimi.dsi.fastutil.doubles.AbstractDoubleList;

 public class CubePointRange extends AbstractDoubleList {
     private final int parts;
+    private double scale; // Fusion - Lithium: Precompute Shape Arrays

     CubePointRange(int sectionCount) {
         if (sectionCount <= 0) {
@@ -11,10 +12,11 @@ public class CubePointRange extends AbstractDoubleList {
         } else {
             this.parts = sectionCount;
         }
+        this.scale = 1.0D / sectionCount; // Fusion - Lithium: Precompute Shape Arrays
     }

     public double getDouble(int i) {
-        return (double)i / (double)this.parts;
+        return com.github.ipecter.fusion.FusionConfig.lithiumPrecomputeShapeArrays ? i * this.scale : (double)i / (double)this.parts;
     }

     public int size() {
diff --git a/src/main/java/net/minecraft/world/phys/shapes/CubeVoxelShape.java b/src/main/java/net/minecraft/world/phys/shapes/CubeVoxelShape.java
index 68e89dbd79171627046e89699057964e44c40e7d..3bec69d7821f5e4ef2968bde82df131e75814f24 100644
--- a/src/main/java/net/minecraft/world/phys/shapes/CubeVoxelShape.java
+++ b/src/main/java/net/minecraft/world/phys/shapes/CubeVoxelShape.java
@@ -5,12 +5,20 @@ import net.minecraft.core.Direction;
 import net.minecraft.util.Mth;

 public final class CubeVoxelShape extends VoxelShape {
+    private DoubleList[] list; // Fusion - Lithium: Precompute Shape Arrays
+
     protected CubeVoxelShape(DiscreteVoxelShape voxels) {
         super(voxels);
+        // Fusion start - Lithium: Precompute Shape Arrays
+        this.list = new DoubleList[Direction.VALUES.length];
+        for (Direction.Axis axis : Direction.Axis.VALUES) {
+            this.list[axis.ordinal()] = new CubePointRange(voxels.getSize(axis));
+        }
+        // Fusion end
     }

     @Override
     protected DoubleList getCoords(Direction.Axis axis) {
-        return new CubePointRange(this.shape.getSize(axis));
+        return com.github.ipecter.fusion.FusionConfig.lithiumPrecomputeShapeArrays ? this.list[axis.ordinal()] : new CubePointRange(this.shape.getSize(axis)); // Fusion - Lithium: Precompute Shape Arrays
     }

     @Override