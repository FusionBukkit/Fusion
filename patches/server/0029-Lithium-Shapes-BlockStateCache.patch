From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: IPECTER <ipectert@gmail.com>
Date: Thu, 5 Jan 2023 11:21:19 +0900
Subject: [PATCH] Lithium-Shapes-BlockStateCache

Lithium - CaffeineMC  - GPL 3.0
JettPack - Titaniumtown - GPL 3.0
Mirai - etil2jz - GPL 3.0

diff --git a/src/main/java/net/minecraft/world/level/block/Block.java b/src/main/java/net/minecraft/world/level/block/Block.java
index eb3d528889890fde4d8dcbe3399710c963a8a4cd..c598561947f55c7c2282dba32bbe9cdd392f1a5b 100644
--- a/src/main/java/net/minecraft/world/level/block/Block.java
+++ b/src/main/java/net/minecraft/world/level/block/Block.java
@@ -75,11 +75,12 @@ public class Block extends BlockBehaviour implements ItemLike {
     private static final Logger LOGGER = LogUtils.getLogger();
     private final Holder.Reference<Block> builtInRegistryHolder;
     public static final IdMapper<BlockState> BLOCK_STATE_REGISTRY = new IdMapper<>();
-    private static final LoadingCache<VoxelShape, Boolean> SHAPE_FULL_BLOCK_CACHE = CacheBuilder.newBuilder().maximumSize(512L).weakKeys().build(new CacheLoader<VoxelShape, Boolean>() {
-        public Boolean load(VoxelShape voxelshape) {
-            return !Shapes.joinIsNotEmpty(Shapes.block(), voxelshape, BooleanOp.NOT_SAME);
-        }
-    });
+    // Fusion start - Lithium: Shapes BlockStateCache
+    private static final me.jellysquid.mods.lithium.common.util.collections.Object2BooleanCacheTable<VoxelShape> FULL_CUBE_CACHE = new me.jellysquid.mods.lithium.common.util.collections.Object2BooleanCacheTable<>(
+            512,
+            shape -> !Shapes.joinIsNotEmpty(Shapes.block(), shape, BooleanOp.NOT_SAME)
+    );
+    // Fusion end
     public static final int UPDATE_NEIGHBORS = 1;
     public static final int UPDATE_CLIENTS = 2;
     public static final int UPDATE_INVISIBLE = 4;
@@ -289,9 +290,15 @@ public class Block extends BlockBehaviour implements ItemLike {
         return Block.isShapeFullBlock(voxelshape1);
     }
 
+    // Fusion start - Lithium: Shapes BlockStateCache
+    /**
+     * @reason Use a faster cache implementation
+     * @author gegy1000
+     */
     public static boolean isShapeFullBlock(VoxelShape shape) {
-        return (Boolean) Block.SHAPE_FULL_BLOCK_CACHE.getUnchecked(shape);
+        return FULL_CUBE_CACHE.get(shape);
     }
+    // Fusion end
 
     public boolean propagatesSkylightDown(BlockState state, BlockGetter world, BlockPos pos) {
         return !Block.isShapeFullBlock(state.getShape(world, pos)) && state.getFluidState().isEmpty();
