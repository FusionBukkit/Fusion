From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: IPECTER <ipectert@gmail.com>
Date: Mon, 17 Oct 2022 21:06:24 +0900
Subject: [PATCH] Lithium-General-FastUtil

Mirai - etil2jz - GPL 3.0
JettPack - Titaniumtown - GPL 3.0
Lithium - CaffeineMC  - GPL 3.0

diff --git a/src/main/java/com/github/ipecter/fusion/FusionConfig.java b/src/main/java/com/github/ipecter/fusion/FusionConfig.java
index d73846735a00be86665e554c5b752c8865233eae..5e8a5d5da3713a88e6577cf70c73fa4f0808874f 100644
--- a/src/main/java/com/github/ipecter/fusion/FusionConfig.java
+++ b/src/main/java/com/github/ipecter/fusion/FusionConfig.java
@@ -196,9 +196,11 @@ public class FusionConfig {
     }
 
     public static boolean lithiumEnable = true;
+    public static boolean lithiumGeneralFastUtil = true;
 
     private static void lithiumConfig() {
         setComment("lithium", "[ Lithium ] General-Purpose Optimization Mod");
         lithiumEnable = getBoolean("lithium.enable", lithiumEnable);
+        lithiumGeneralFastUtil = getBoolean("lithium.general.fast-util", lithiumGeneralFastUtil) && lithiumEnable;
     }
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/core/Direction.java b/src/main/java/net/minecraft/core/Direction.java
index 6c27b22dd1d497687c0f4d3835e34149bcf952c1..3908708107aea6ecbf07797ea25785b1ed44854b 100644
--- a/src/main/java/net/minecraft/core/Direction.java
+++ b/src/main/java/net/minecraft/core/Direction.java
@@ -196,7 +196,7 @@ public enum Direction implements StringRepresentable {
     }
 
     public Direction getOpposite() {
-        return from3DDataValue(this.oppositeIndex);
+        return com.github.ipecter.fusion.FusionConfig.lithiumGeneralFastUtil ? VALUES[this.oppositeIndex] : from3DDataValue(this.oppositeIndex); // Fusion - Lithium: Fast Util
     }
 
     public Direction getClockWise(Direction.Axis axis) {
@@ -458,7 +458,7 @@ public enum Direction implements StringRepresentable {
     }
 
     public static Direction getRandom(RandomSource random) {
-        return Util.getRandom(VALUES, random);
+        return com.github.ipecter.fusion.FusionConfig.lithiumGeneralFastUtil ? VALUES[random.nextInt(VALUES.length)] : Util.getRandom(VALUES, random); // Fusion - Lithium: Fast Util
     }
 
     public static Direction getNearest(double x, double y, double z) {
diff --git a/src/main/java/net/minecraft/world/phys/AABB.java b/src/main/java/net/minecraft/world/phys/AABB.java
index cfb2e46b34b2982d6724f18214557fc80cf4adfa..0985dc18803f61e14c2865148a6caf3ae3410235 100644
--- a/src/main/java/net/minecraft/world/phys/AABB.java
+++ b/src/main/java/net/minecraft/world/phys/AABB.java
@@ -16,6 +16,17 @@ public class AABB {
     public final double maxY;
     public final double maxZ;
 
+    // Fusion start - Lithium: Fast Util
+    static {
+        if (com.github.ipecter.fusion.FusionConfig.lithiumGeneralFastUtil) {
+            assert Direction.Axis.X.ordinal() == 0;
+            assert Direction.Axis.Y.ordinal() == 1;
+            assert Direction.Axis.Z.ordinal() == 2;
+            assert Direction.Axis.values().length == 3;
+        }
+    }
+    // Fusion end
+
     public AABB(double x1, double y1, double z1, double x2, double y2, double z2) {
         this.minX = Math.min(x1, x2);
         this.minY = Math.min(y1, y2);
@@ -81,11 +92,41 @@ public class AABB {
     }
 
     public double min(Direction.Axis axis) {
-        return axis.choose(this.minX, this.minY, this.minZ);
+        // Fusion start - Lithium: Fast Util
+        if (com.github.ipecter.fusion.FusionConfig.lithiumGeneralFastUtil){
+            switch (axis.ordinal()) {
+                case 0: //X
+                   return this.minX;
+                case 1: //Y
+                    return this.minY;
+                case 2: //Z
+                    return this.minZ;
+            }
+            throw new IllegalArgumentException();
+        }
+        else{
+            return axis.choose(this.minX, this.minY, this.minZ);
+        }
+        // Fusion end
     }
 
     public double max(Direction.Axis axis) {
-        return axis.choose(this.maxX, this.maxY, this.maxZ);
+        // Fusion start - Lithium: Fast Util
+        if (com.github.ipecter.fusion.FusionConfig.lithiumGeneralFastUtil){
+            switch (axis.ordinal()) {
+                case 0: //X
+                    return this.maxX;
+                case 1: //Y
+                    return this.maxY;
+                case 2: //Z
+                    return this.maxZ;
+            }
+            throw new IllegalArgumentException();
+        }
+        else{
+            return axis.choose(this.maxX, this.maxY, this.maxZ);
+        }
+        // Fusion end
     }
 
     @Override
