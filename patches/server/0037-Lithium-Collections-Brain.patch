From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: IPECTER <ipectert@gmail.com>
Date: Mon, 9 Jan 2023 11:04:38 +0900
Subject: [PATCH] Lithium-Collections-Brain

Lithium - CaffeineMC  - GPL 3.0
JettPack - Titaniumtown - GPL 3.0

diff --git a/src/main/java/com/github/ipecter/fusion/FusionConfig.java b/src/main/java/com/github/ipecter/fusion/FusionConfig.java
index 4c495bb6b6a567fec364c09bf8606b59419991fb..52e6be0c7cc8955b224006dd2d95e21eff02664d 100644
--- a/src/main/java/com/github/ipecter/fusion/FusionConfig.java
+++ b/src/main/java/com/github/ipecter/fusion/FusionConfig.java
@@ -230,6 +230,7 @@ public class FusionConfig {
     public static boolean lithiumCollectionsEntityFiltering = true;
     public static boolean lithiumChunkSerialization = true;
     public static boolean lithiumWorldTickScheduler = true;
+    public static boolean lithiumCollectionsBrain = true;
 
     private static void lithiumConfig() {
         lithiumMathFastUtil = getBoolean("lithium.math.fast-util", lithiumMathFastUtil) && lithiumEnable;
@@ -243,6 +244,7 @@ public class FusionConfig {
         lithiumCollectionsEntityFiltering = getBoolean("lithium.collections.entity-filtering", lithiumCollectionsEntityFiltering) && lithiumEnable;
         lithiumChunkSerialization = getBoolean("lithium.chunk.serialization", lithiumChunkSerialization) && lithiumEnable;
         lithiumWorldTickScheduler = getBoolean("lithium.world.tick-scheduler", lithiumWorldTickScheduler) && lithiumEnable;
+        lithiumCollectionsBrain = getBoolean("lithium.collections.brain", lithiumCollectionsBrain) && lithiumEnable;
     }
 
     private static void lithiumConfigSetup() {
diff --git a/src/main/java/net/minecraft/world/entity/ai/Brain.java b/src/main/java/net/minecraft/world/entity/ai/Brain.java
index 663e278df704ef15f6195339d76642914e7e15e1..e400a306f7250dede5cf87f8b413605d7a51f985 100644
--- a/src/main/java/net/minecraft/world/entity/ai/Brain.java
+++ b/src/main/java/net/minecraft/world/entity/ai/Brain.java
@@ -43,8 +43,8 @@ public class Brain<E extends LivingEntity> {
     static final Logger LOGGER = LogUtils.getLogger();
     private final Supplier<Codec<Brain<E>>> codec;
     private static final int SCHEDULE_UPDATE_DELAY = 20;
-    private final Map<MemoryModuleType<?>, Optional<? extends ExpirableValue<?>>> memories = Maps.newHashMap();
-    private final Map<SensorType<? extends Sensor<? super E>>, Sensor<? super E>> sensors = Maps.newLinkedHashMap();
+    private final Map<MemoryModuleType<?>, Optional<? extends ExpirableValue<?>>> memories; // Fusion - Lithium: Collections Brain
+    private final Map<SensorType<? extends Sensor<? super E>>, Sensor<? super E>> sensors; // Fusion - Lithium: Collections Brain
     private final Map<Integer, Map<Activity, Set<BehaviorControl<? super E>>>> availableBehaviorsByPriority = Maps.newTreeMap();
     private Schedule schedule = Schedule.EMPTY;
     private final Map<Activity, Set<Pair<MemoryModuleType<?>, MemoryStatus>>> activityRequirements = Maps.newHashMap();
@@ -105,6 +105,11 @@ public class Brain<E extends LivingEntity> {
     }
 
     public Brain(Collection<? extends MemoryModuleType<?>> memories, Collection<? extends SensorType<? extends Sensor<? super E>>> sensors, ImmutableList<Brain.MemoryValue<?>> memoryEntries, Supplier<Codec<Brain<E>>> codecSupplier) {
+        // Fusion start - Lithium: Collections Brain
+        this.memories = com.github.ipecter.fusion.FusionConfig.lithiumCollectionsBrain ? new it.unimi.dsi.fastutil.objects.Reference2ReferenceOpenHashMap<>() : Maps.newHashMap();
+        this.sensors = com.github.ipecter.fusion.FusionConfig.lithiumCollectionsBrain ? new it.unimi.dsi.fastutil.objects.Reference2ReferenceLinkedOpenHashMap<>() : Maps.newLinkedHashMap();
+        // Fusion end
+
         this.codec = codecSupplier;
 
         for(MemoryModuleType<?> memoryModuleType : memories) {
