From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: IPECTER <ipectert@gmail.com>
Date: Mon, 9 Jan 2023 14:04:31 +0900
Subject: [PATCH] Lithium-AI-NearbyEntityTracking-Goals


diff --git a/src/main/java/com/github/ipecter/fusion/FusionConfig.java b/src/main/java/com/github/ipecter/fusion/FusionConfig.java
index ad6c7fff6c905be7b3d8afd69edd172fd5d95cd1..db64047fd306a66d14c134bf230efb2272be18b7 100644
--- a/src/main/java/com/github/ipecter/fusion/FusionConfig.java
+++ b/src/main/java/com/github/ipecter/fusion/FusionConfig.java
@@ -233,6 +233,7 @@ public class FusionConfig {
     public static boolean lithiumCollectionsBrain = true;
     public static boolean lithiumAITaskMemoryChangeCounting = true;
     public static boolean lithiumAINearbyEntityTracking = false;
+    public static boolean lithiumAINearbyEntityTrackingGoals = true;
 
     private static void lithiumConfig() {
         lithiumMathFastUtil = getBoolean("lithium.math.fast-util", lithiumMathFastUtil) && lithiumEnable;
@@ -249,6 +250,7 @@ public class FusionConfig {
         lithiumCollectionsBrain = getBoolean("lithium.collections.brain", lithiumCollectionsBrain) && lithiumEnable;
         lithiumAITaskMemoryChangeCounting = getBoolean("lithium.ai.task.memory-change-counting", lithiumAITaskMemoryChangeCounting) && lithiumEnable;
         lithiumAINearbyEntityTracking = getBoolean("lithium.ai.nearby-entity-tracking.enable", lithiumAINearbyEntityTracking) && lithiumEnable;
+        lithiumAINearbyEntityTrackingGoals = getBoolean("lithium.ai.nearby-entity-tracking.goals", lithiumAINearbyEntityTrackingGoals) && lithiumEnable && lithiumAINearbyEntityTracking;
     }
 
     private static void lithiumConfigSetup() {
diff --git a/src/main/java/net/minecraft/world/entity/ai/goal/AvoidEntityGoal.java b/src/main/java/net/minecraft/world/entity/ai/goal/AvoidEntityGoal.java
index 66e5c2716684f54e15e931e33d09463c0df0fda3..6277538828141c4c7f2e3f62739983a9fcd71e24 100644
--- a/src/main/java/net/minecraft/world/entity/ai/goal/AvoidEntityGoal.java
+++ b/src/main/java/net/minecraft/world/entity/ai/goal/AvoidEntityGoal.java
@@ -26,6 +26,7 @@ public class AvoidEntityGoal<T extends LivingEntity> extends Goal {
     protected final Predicate<LivingEntity> avoidPredicate;
     protected final Predicate<LivingEntity> predicateOnAvoidEntity;
     private final TargetingConditions avoidEntityTargeting;
+    private me.jellysquid.mods.lithium.common.entity.nearby_tracker.NearbyEntityTracker<? extends LivingEntity> nearbyEntityTracker; // Fusion - Lithium: AI NearbyEntityTracking Goals
 
     public AvoidEntityGoal(PathfinderMob mob, Class<T> fleeFromType, float distance, double slowSpeed, double fastSpeed) {
         this(mob, fleeFromType, (livingEntity) -> {
@@ -44,6 +45,14 @@ public class AvoidEntityGoal<T extends LivingEntity> extends Goal {
         this.pathNav = mob.getNavigation();
         this.setFlags(EnumSet.of(Goal.Flag.MOVE));
         this.avoidEntityTargeting = TargetingConditions.forCombat().range((double)distance).selector(inclusionSelector.and(extraInclusionSelector));
+        // Fusion start - Lithium: AI NearbyEntityTracking Goals
+        net.minecraft.world.entity.EntityDimensions dimensions = this.mob.getType().getDimensions();
+        double adjustedRange = dimensions.width * 0.5D + this.maxDist + 2D;
+        int horizontalRange = net.minecraft.util.Mth.ceil(adjustedRange);
+        this.nearbyEntityTracker = new me.jellysquid.mods.lithium.common.entity.nearby_tracker.NearbyEntityTracker<>(fleeFromType, mob, new net.minecraft.core.Vec3i(horizontalRange, net.minecraft.util.Mth.ceil(dimensions.height + 3 + 2), horizontalRange));
+
+        mob.addListener(this.nearbyEntityTracker);
+        // Fusion end
     }
 
     public AvoidEntityGoal(PathfinderMob fleeingEntity, Class<T> classToFleeFrom, float fleeDistance, double fleeSlowSpeed, double fleeFastSpeed, Predicate<LivingEntity> inclusionSelector) {
@@ -54,9 +63,15 @@ public class AvoidEntityGoal<T extends LivingEntity> extends Goal {
 
     @Override
     public boolean canUse() {
-        this.toAvoid = this.mob.level.getNearestEntity(this.mob.level.getEntitiesOfClass(this.avoidClass, this.mob.getBoundingBox().inflate((double)this.maxDist, 3.0D, (double)this.maxDist), (livingEntity) -> {
-            return true;
-        }), this.avoidEntityTargeting, this.mob, this.mob.getX(), this.mob.getY(), this.mob.getZ());
+        // Fusion start - Lithium: AI NearbyEntityTracking Goals
+        if (com.github.ipecter.fusion.FusionConfig.lithiumAINearbyEntityTrackingGoals) {
+            this.nearbyEntityTracker.getClosestEntity(this.mob.getBoundingBox().inflate(this.maxDist, 3.0D, this.maxDist), this.avoidEntityTargeting, this.mob.getX(), this.mob.getY(), this.mob.getZ());
+        } else {
+            this.toAvoid = this.mob.level.getNearestEntity(this.mob.level.getEntitiesOfClass(this.avoidClass, this.mob.getBoundingBox().inflate((double) this.maxDist, 3.0D, (double) this.maxDist), (livingEntity) -> {
+                return true;
+            }), this.avoidEntityTargeting, this.mob, this.mob.getX(), this.mob.getY(), this.mob.getZ());
+        }
+        // Fusion end
         if (this.toAvoid == null) {
             return false;
         } else {
diff --git a/src/main/java/net/minecraft/world/entity/ai/goal/LookAtPlayerGoal.java b/src/main/java/net/minecraft/world/entity/ai/goal/LookAtPlayerGoal.java
index 8b189d7587303263efa1790066e5a83edd45f9d7..442199a2771b772675c45f25ca6820873b7211bc 100644
--- a/src/main/java/net/minecraft/world/entity/ai/goal/LookAtPlayerGoal.java
+++ b/src/main/java/net/minecraft/world/entity/ai/goal/LookAtPlayerGoal.java
@@ -20,6 +20,7 @@ public class LookAtPlayerGoal extends Goal {
     private final boolean onlyHorizontal;
     protected final Class<? extends LivingEntity> lookAtType;
     protected final TargetingConditions lookAtContext;
+    private me.jellysquid.mods.lithium.common.entity.nearby_tracker.NearbyEntityTracker<? extends LivingEntity> nearbyEntityTracker; // Fusion - Lithium: AI NearbyEntityTracking Goals
 
     public LookAtPlayerGoal(Mob mob, Class<? extends LivingEntity> targetType, float range) {
         this(mob, targetType, range, 0.02F);
@@ -43,7 +44,16 @@ public class LookAtPlayerGoal extends Goal {
         } else {
             this.lookAtContext = TargetingConditions.forNonCombat().range((double)range);
         }
+        // Fusion start - Lithium: AI NearbyEntityTracking Goals
+        if (com.github.ipecter.fusion.FusionConfig.lithiumAINearbyEntityTrackingGoals) {
+            net.minecraft.world.entity.EntityDimensions dimensions = this.mob.getType().getDimensions();
+            double adjustedRange = dimensions.width * 0.5D + this.lookDistance + 2D;
+            int horizontalRange = net.minecraft.util.Mth.ceil(adjustedRange);
+            this.nearbyEntityTracker = new me.jellysquid.mods.lithium.common.entity.nearby_tracker.NearbyEntityTracker<>(targetType, mob, new net.minecraft.core.Vec3i(horizontalRange, net.minecraft.util.Mth.ceil(dimensions.height + 3 + 2), horizontalRange));
 
+            mob.addListener(this.nearbyEntityTracker);
+        }
+        // Fusion end
     }
 
     @Override
@@ -54,14 +64,23 @@ public class LookAtPlayerGoal extends Goal {
             if (this.mob.getTarget() != null) {
                 this.lookAt = this.mob.getTarget();
             }
-
+            // Fusion start - Lithium: AI NearbyEntityTracking Goals
             if (this.lookAtType == Player.class) {
-                this.lookAt = this.mob.level.getNearestPlayer(this.lookAtContext, this.mob, this.mob.getX(), this.mob.getEyeY(), this.mob.getZ());
+                if (com.github.ipecter.fusion.FusionConfig.lithiumAINearbyEntityTrackingGoals) {
+                    this.lookAt = (Player)this.nearbyEntityTracker.getClosestEntity(null, this.lookAtContext, this.mob.getX(), this.mob.getEyeY(), this.mob.getZ());
+                } else {
+                    this.lookAt = this.mob.level.getNearestPlayer(this.lookAtContext, this.mob, this.mob.getX(), this.mob.getEyeY(), this.mob.getZ());
+                }
             } else {
-                this.lookAt = this.mob.level.getNearestEntity(this.mob.level.getEntitiesOfClass(this.lookAtType, this.mob.getBoundingBox().inflate((double)this.lookDistance, 3.0D, (double)this.lookDistance), (livingEntity) -> {
-                    return true;
-                }), this.lookAtContext, this.mob, this.mob.getX(), this.mob.getEyeY(), this.mob.getZ());
+                if (com.github.ipecter.fusion.FusionConfig.lithiumAINearbyEntityTrackingGoals) {
+                    this.lookAt = this.nearbyEntityTracker.getClosestEntity(this.mob.getBoundingBox().inflate((double) this.lookDistance, 3.0D, (double) this.lookDistance), this.lookAtContext, this.mob.getX(), this.mob.getEyeY(), this.mob.getZ());
+                } else {
+                    this.lookAt = this.mob.level.getNearestEntity(this.mob.level.getEntitiesOfClass(this.lookAtType, this.mob.getBoundingBox().inflate((double) this.lookDistance, 3.0D, (double) this.lookDistance), (livingEntity) -> {
+                        return true;
+                    }), this.lookAtContext, this.mob, this.mob.getX(), this.mob.getEyeY(), this.mob.getZ());
+                }
             }
+            // Fusion end
 
             return this.lookAt != null;
         }
