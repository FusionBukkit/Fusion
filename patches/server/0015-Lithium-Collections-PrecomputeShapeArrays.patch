From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: IPECTER <ipectert@gmail.com>
Date: Tue, 25 Oct 2022 22:28:36 +0900
Subject: [PATCH] Lithium-Collections-PrecomputeShapeArrays

JettPack - Titaniumtown - GPL 3.0
Lithium - CaffeineMC  - GPL 3.0

diff --git a/src/main/java/com/github/ipecter/fusion/FusionConfig.java b/src/main/java/com/github/ipecter/fusion/FusionConfig.java
index 10d6b5c9812ff5c5371d95da09daec275501f9c2..d822d9df5f4e100f3956ad494bdab30d8b4e378a 100644
--- a/src/main/java/com/github/ipecter/fusion/FusionConfig.java
+++ b/src/main/java/com/github/ipecter/fusion/FusionConfig.java
@@ -201,6 +201,7 @@ public class FusionConfig {
     public static boolean lithiumEntityFastRetrieval = true;
     public static boolean lithiumCollectionsEntityAIGoals = true;
     public static boolean lithiumCollectionsStoreGameRules = true;
+    public static boolean lithiumCollectionsPrecomputeShapeArrays = true;
 
     private static void lithiumConfig() {
         setComment("lithium", "[ Lithium ] General-Purpose Optimization Mod");
@@ -210,5 +211,6 @@ public class FusionConfig {
         lithiumEntityFastRetrieval = getBoolean("lithium.entity.fast-retrieval", lithiumEntityFastRetrieval) && lithiumEnable;
         lithiumCollectionsEntityAIGoals = getBoolean("lithium.collections.entity-ai-goals", lithiumCollectionsEntityAIGoals) && lithiumEnable;
         lithiumCollectionsStoreGameRules = getBoolean("lithium.collections.store-gamerules", lithiumCollectionsStoreGameRules) && lithiumEnable;
+        lithiumCollectionsPrecomputeShapeArrays = getBoolean("lithium.collections.precompute-shape-arrays", lithiumCollectionsPrecomputeShapeArrays) && lithiumEnable;
     }
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/core/Direction.java b/src/main/java/net/minecraft/core/Direction.java
index b1f04813d5c6a114c3051a6feaad4fb0e32d6916..fb926dec7d6273bc9e2ba84d74c605725cd51624 100644
--- a/src/main/java/net/minecraft/core/Direction.java
+++ b/src/main/java/net/minecraft/core/Direction.java
@@ -41,7 +41,7 @@ public enum Direction implements StringRepresentable {
     private final Direction.Axis axis;
     private final Direction.AxisDirection axisDirection;
     private final Vec3i normal;
-    private static final Direction[] VALUES = values();
+    public static final Direction[] VALUES = values(); // Fusion - Lithium: Collections Precompute Shape Arrays
     private static final Direction[] BY_3D_DATA = Arrays.stream(VALUES).sorted(Comparator.comparingInt((direction) -> {
         return direction.data3d;
     })).toArray((i) -> {
diff --git a/src/main/java/net/minecraft/world/phys/shapes/CubePointRange.java b/src/main/java/net/minecraft/world/phys/shapes/CubePointRange.java
index a544db042c8d2ecec8d323770552c4f10ca758a6..1778960780d22fa16b8036eaf794bb24c46cb498 100644
--- a/src/main/java/net/minecraft/world/phys/shapes/CubePointRange.java
+++ b/src/main/java/net/minecraft/world/phys/shapes/CubePointRange.java
@@ -4,6 +4,7 @@ import it.unimi.dsi.fastutil.doubles.AbstractDoubleList;
 
 public class CubePointRange extends AbstractDoubleList {
     private final int parts;
+    private double scale; // Fusion - Lithium: Collections Precompute Shape Arrays
 
     CubePointRange(int sectionCount) {
         if (sectionCount <= 0) {
@@ -11,10 +12,11 @@ public class CubePointRange extends AbstractDoubleList {
         } else {
             this.parts = sectionCount;
         }
+        this.scale = 1.0D / sectionCount; // Fusion - Lithium: Collections Precompute Shape Arrays
     }
 
     public double getDouble(int i) {
-        return (double)i / (double)this.parts;
+        return com.github.ipecter.fusion.FusionConfig.lithiumCollectionsPrecomputeShapeArrays ? i * this.scale : (double)i / (double)this.parts;
     }
 
     public int size() {
diff --git a/src/main/java/net/minecraft/world/phys/shapes/CubeVoxelShape.java b/src/main/java/net/minecraft/world/phys/shapes/CubeVoxelShape.java
index 68e89dbd79171627046e89699057964e44c40e7d..48ac83762694bac06e04feaaaac1a5fda34eec0e 100644
--- a/src/main/java/net/minecraft/world/phys/shapes/CubeVoxelShape.java
+++ b/src/main/java/net/minecraft/world/phys/shapes/CubeVoxelShape.java
@@ -5,13 +5,21 @@ import net.minecraft.core.Direction;
 import net.minecraft.util.Mth;
 
 public final class CubeVoxelShape extends VoxelShape {
+    private DoubleList[] list; // Fusion - Lithium: Collections Precompute Shape Arrays
+
     protected CubeVoxelShape(DiscreteVoxelShape voxels) {
         super(voxels);
+        // Fusion start - Lithium: Collections Precompute Shape Arrays
+        this.list = new DoubleList[Direction.VALUES.length];
+        for (Direction.Axis axis : Direction.Axis.VALUES) {
+            this.list[axis.ordinal()] = new CubePointRange(voxels.getSize(axis));
+        }
+        // Fusion end
     }
 
     @Override
     protected DoubleList getCoords(Direction.Axis axis) {
-        return new CubePointRange(this.shape.getSize(axis));
+        return com.github.ipecter.fusion.FusionConfig.lithiumCollectionsPrecomputeShapeArrays ? this.list[axis.ordinal()] : new CubePointRange(this.shape.getSize(axis)); // Fusion - Lithium: Collections Precompute Shape Arrays
     }
 
     @Override
