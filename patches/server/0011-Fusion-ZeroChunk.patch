From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: IPECTER <ipectert@gmail.com>
Date: Thu, 20 Oct 2022 23:35:49 +0900
Subject: [PATCH] Fusion-ZeroChunk


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 10d33f1b4b5d7bb20f84143a119aff62ed30d42a..79e102623d22867ea5981662c79023e4b5ccecab 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -656,7 +656,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
         WorldBorder worldborder = worldserver.getWorldBorder();
         worldborder.applySettings(iworlddataserver.getWorldBorder()); // CraftBukkit - move up so that WorldBorder is set during WorldInitEvent
         this.server.getPluginManager().callEvent(new org.bukkit.event.world.WorldInitEvent(worldserver.getWorld())); // CraftBukkit - SPIGOT-5569: Call WorldInitEvent before any chunks are generated
-
+        com.github.ipecter.fusion.zerochunk.ZeroChunk.getInstance().initWorld(worldserver.getWorld()); // Fusion - ZeroChunk
         if (!iworlddataserver.isInitialized()) {
             try {
                 MinecraftServer.setInitialSpawn(worldserver, iworlddataserver, generatorsettings.generateBonusChest(), flag);
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 26d73eec3633cebc85972dbdeb14975d2dbb9b5b..3fbc1ac75144a50f7dde583816b07f8b50f760b6 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -1176,6 +1176,7 @@ public class ServerPlayer extends Player {
             Location exit = (worldserver == null) ? null : new Location(worldserver.getWorld(), shapedetectorshape.pos.x, shapedetectorshape.pos.y, shapedetectorshape.pos.z, shapedetectorshape.yRot, shapedetectorshape.xRot);
             PlayerTeleportEvent tpEvent = new PlayerTeleportEvent(this.getBukkitEntity(), enter, exit, cause);
             Bukkit.getServer().getPluginManager().callEvent(tpEvent);
+            com.github.ipecter.fusion.zerochunk.ZeroChunk.getInstance().unloadView(this.getBukkitEntity(), tpEvent.getFrom(), tpEvent.getTo()); // Fusion - ZeroChunk
             if (tpEvent.isCancelled() || tpEvent.getTo() == null) {
                 return null;
             }
diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 66c632f9a824e705420b9bb86de294f0e7305c50..d3a01bc74a43d5e729c95b326eeff6179e9f8afd 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -1820,7 +1820,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
         PlayerTeleportEvent event = new PlayerTeleportEvent(player, from.clone(), to.clone(), cause, flag, java.util.Set.copyOf(relativeFlags));
         // Paper end
         this.cserver.getPluginManager().callEvent(event);
-
+        com.github.ipecter.fusion.zerochunk.ZeroChunk.getInstance().unloadView(player, event.getFrom(), event.getTo()); // Fusion - ZeroChunk
         if (event.isCancelled() || !to.equals(event.getTo())) {
             //set.clear(); // Can't relative teleport // Paper - Teleport API: Now you can!
             to = event.isCancelled() ? event.getFrom() : event.getTo();
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 3fb2323c89d04f1a545897a1e67f6f637f5ab9c1..1f3bd65bc476bf0380f22c1ef18406d912589991 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -370,7 +370,8 @@ public abstract class PlayerList {
 
         PlayerJoinEvent playerJoinEvent = new PlayerJoinEvent(bukkitPlayer, PaperAdventure.asAdventure(ichatmutablecomponent)); // Paper - Adventure
         this.cserver.getPluginManager().callEvent(playerJoinEvent);
-
+        com.github.ipecter.fusion.zerochunk.ZeroChunk.getInstance().branchMinecraft.injectPlayer(player); // Fusion - ZeroChunk
+        com.github.ipecter.fusion.zerochunk.ZeroChunk.getInstance().initView(bukkitPlayer); // Fusion - ZeroChunk
         if (!player.connection.connection.isConnected()) {
             return;
         }
@@ -628,6 +629,7 @@ public abstract class PlayerList {
 
         PlayerQuitEvent playerQuitEvent = new PlayerQuitEvent(entityplayer.getBukkitEntity(), leaveMessage, entityplayer.quitReason); // Paper - quit reason
         if (entityplayer.didPlayerJoinEvent) this.cserver.getPluginManager().callEvent(playerQuitEvent); // Paper - if we disconnected before join ever fired, don't fire quit
+        com.github.ipecter.fusion.zerochunk.ZeroChunk.getInstance().clearView(entityplayer.getBukkitEntity()); // Fusion - ZeroChunk
         entityplayer.getBukkitEntity().disconnect(playerQuitEvent.getQuitMessage());
 
         if (server.isSameThread()) entityplayer.doTick(); // SPIGOT-924 // Paper - don't tick during emergency shutdowns (Watchdog)
@@ -934,6 +936,7 @@ public abstract class PlayerList {
             Player respawnPlayer = entityplayer1.getBukkitEntity();
             PlayerRespawnEvent respawnEvent = new PlayerRespawnEvent(respawnPlayer, location, isBedSpawn && !isAnchorSpawn, isAnchorSpawn, com.google.common.collect.ImmutableSet.<org.bukkit.event.player.PlayerRespawnEvent.RespawnFlag>builder().add(respawnFlags)); // Paper - Fix anchor respawn acting as a bed respawn from the end portal
             this.cserver.getPluginManager().callEvent(respawnEvent);
+            com.github.ipecter.fusion.zerochunk.ZeroChunk.getInstance().respawnView(respawnPlayer); // Fusion - ZeroChunk
             // Spigot Start
             if (entityplayer.connection.isDisconnected()) {
                 return entityplayer;
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
index 332e12bdb686532333bb95682f420dab56ac7930..5520bc55378c973b1c8f5ecabf1af7146c1d2ca7 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
@@ -67,7 +67,7 @@ public class ThrownEnderpearl extends ThrowableItemProjectile {
 
                     PlayerTeleportEvent teleEvent = new PlayerTeleportEvent(player, player.getLocation(), location, PlayerTeleportEvent.TeleportCause.ENDER_PEARL);
                     Bukkit.getPluginManager().callEvent(teleEvent);
-
+                    com.github.ipecter.fusion.zerochunk.ZeroChunk.getInstance().unloadView(player, teleEvent.getFrom(), teleEvent.getTo()); // Fusion - ZeroChunk
                     if (!teleEvent.isCancelled() && !entityplayer.connection.isDisconnected()) {
                         if (this.random.nextFloat() < this.level.purpurConfig.enderPearlEndermiteChance && this.level.getGameRules().getBoolean(GameRules.RULE_DOMOBSPAWNING)) { // Purpur
                             Endermite entityendermite = (Endermite) EntityType.ENDERMITE.create(this.level);
diff --git a/src/main/java/net/minecraft/world/level/Level.java b/src/main/java/net/minecraft/world/level/Level.java
index 9f20a751996fd82d40cba967ef34e428df5910e0..8408fdfd5231573ee61c91c798b529ae75ec8383 100644
--- a/src/main/java/net/minecraft/world/level/Level.java
+++ b/src/main/java/net/minecraft/world/level/Level.java
@@ -679,6 +679,7 @@ public abstract class Level implements LevelAccessor, AutoCloseable {
                 this.capturedBlockStates.put(pos.immutable(), blockstate);
             }
             blockstate.setData(state);
+            com.github.ipecter.fusion.zerochunk.ZeroChunk.getInstance().branchMinecraft.fromChunk(world, getChunkAt(pos).getBukkitChunk()).setIBlockData(pos.getX(), pos.getY(), pos.getZ(), state); // Fusion - ZeroChunk
             return true;
         }
         // CraftBukkit end
@@ -760,7 +761,7 @@ public abstract class Level implements LevelAccessor, AutoCloseable {
                     // Spigot end
                 }
                 // CraftBukkit end
-
+                com.github.ipecter.fusion.zerochunk.ZeroChunk.getInstance().branchMinecraft.fromChunk(world, chunk.getBukkitChunk()).setIBlockData(pos.getX(), pos.getY(), pos.getZ(), state); // Fusion - ZeroChunk
                 return true;
             }
         }
diff --git a/src/main/java/net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity.java
index ecd0ba252feb57cb1d60745e7750a67635e8bc7f..4a6de2c91bebecf52e0a7da2e06531693dcd8fb1 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity.java
@@ -229,6 +229,7 @@ public class TheEndGatewayBlockEntity extends TheEndPortalBlockEntity {
 
                     PlayerTeleportEvent teleEvent = new com.destroystokyo.paper.event.player.PlayerTeleportEndGatewayEvent(player, player.getLocation(), location, new org.bukkit.craftbukkit.block.CraftEndGateway(worldserver.getWorld(), blockEntity)); // Paper
                     Bukkit.getPluginManager().callEvent(teleEvent);
+                    com.github.ipecter.fusion.zerochunk.ZeroChunk.getInstance().unloadView(player, teleEvent.getFrom(), teleEvent.getTo()); // Fusion - ZeroChunk
                     if (teleEvent.isCancelled()) {
                         return;
                     }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 6aca14f6feed489fa4f87ec3ec77dba0173252b2..47d6dbd1d6fc78aace8f0ae4290a9d53178a8497 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -1346,7 +1346,7 @@ public final class CraftServer implements Server {
 
         WorldUnloadEvent e = new WorldUnloadEvent(handle.getWorld());
         this.pluginManager.callEvent(e);
-
+        com.github.ipecter.fusion.zerochunk.ZeroChunk.getInstance().clearWorld(handle.getWorld()); // Fusion - ZeroChunk
         if (e.isCancelled()) {
             return false;
         }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 1ca26e7757fa8af885bfb3870128f8b48e0a7745..5fbdccab29cd67c62c143a1feee0fba7c56df87d 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -1319,7 +1319,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         // Create & Call the Teleport Event.
         PlayerTeleportEvent event = new PlayerTeleportEvent(this, from, to, cause);
         server.getPluginManager().callEvent(event);
-
+        com.github.ipecter.fusion.zerochunk.ZeroChunk.getInstance().unloadView(this, event.getFrom(), event.getTo()); // Fusion - ZeroChunk
         // Return False to inform the Plugin that the Teleport was unsuccessful/cancelled.
         if (event.isCancelled()) {
             return false;
